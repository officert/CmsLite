<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ModelTypeNotFound" xml:space="preserve">
    <value>The Model type {0} was not found. Cms Models must implement the ICmsModel interface.</value>
  </data>
  <data name="NoCmsSectionTemplatesFound" xml:space="preserve">
    <value>No Cms Section Templates were found. You must create at least one controller, and mark it using the CmsSectionTemplate attribute.</value>
  </data>
  <data name="PageNodeCannotBeNull" xml:space="preserve">
    <value>Page Node cannot be null.</value>
  </data>
  <data name="PageNodeDisplayNameCannotBeNull" xml:space="preserve">
    <value>A Page Node's Display Name cannot be null or empty.</value>
  </data>
  <data name="PageNodeNotFound" xml:space="preserve">
    <value>No Page Node with id the id {0} exists.</value>
  </data>
  <data name="PageNodeUrlNameCannotBeNull" xml:space="preserve">
    <value>A Page Node's Url Name cannot be null or empty.</value>
  </data>
  <data name="PageNodeUrlNameMustBeUniqueWithinSection" xml:space="preserve">
    <value>A Page Node with the URL name {0} already exists in the Section with id {1}. Page Node URL name must be unique within a Section Node.</value>
  </data>
  <data name="PageNodeUrlNameMustBeUniqueWithinPage" xml:space="preserve">
    <value>A Page Node with the URL name {0} already exists in the Page with id {1}. Page Node URL name must be unique within a Page Node.</value>
  </data>
  <data name="PageTemplateActionNameCannotBeNull" xml:space="preserve">
    <value>Page Template Action Name cannot be null or empty.</value>
  </data>
  <data name="PageTemplateCannotBeNull" xml:space="preserve">
    <value>Page Template cannot be null.</value>
  </data>
  <data name="PageTemplateModelNameCannotBeNull" xml:space="preserve">
    <value>Page Template Model Name cannot be null or empty.</value>
  </data>
  <data name="PageTemplateNotFound" xml:space="preserve">
    <value>No Page Template with the id {0} exists.</value>
  </data>
  <data name="PageTemplateNotFoundForPageTemplate" xml:space="preserve">
    <value>No Page Template with the id {0} exists for the Page Template with id {1}.</value>
  </data>
  <data name="PageTemplateNotFoundForSectionTemplate" xml:space="preserve">
    <value>No Page Template with the id {0} exists for the Section Template with id {1}.</value>
  </data>
  <data name="PasswordDoesNotMatch" xml:space="preserve">
    <value>The password you entered does not match the password we have for this email address.</value>
  </data>
  <data name="PropertyNotFound" xml:space="preserve">
    <value>No Property with the id {0} exists.</value>
  </data>
  <data name="PropertyTemplateCannotBeNull" xml:space="preserve">
    <value>Property Template cannot be null.</value>
  </data>
  <data name="PropertyTemplateNotFound" xml:space="preserve">
    <value>No Property Template with the id {0} exists.</value>
  </data>
  <data name="PropertyTemplateNotFoundForPageTemplate" xml:space="preserve">
    <value>No Property Template with the id {0} exists for the Page Template with Id {1}.</value>
  </data>
  <data name="PropertyTemplatePropertyNameCannotBeNull" xml:space="preserve">
    <value>Property Template Property Name cannot be null or empty.</value>
  </data>
  <data name="SectionNodeDisplayNameCannotBeNull" xml:space="preserve">
    <value>A Section Node's Display Name cannot be null or empty.</value>
  </data>
  <data name="SectionNodeNotFound" xml:space="preserve">
    <value>A Section Node with the Id {0} was not found.</value>
  </data>
  <data name="SectionNodeUrlNameCannotBeNull" xml:space="preserve">
    <value>A Section Node's Url Name cannot be null or empty.</value>
  </data>
  <data name="SectionNodeUrlNameMustBeUnique" xml:space="preserve">
    <value>A Section Node with the URL name {0} alredy exists. Section Node URL names must be unique.</value>
  </data>
  <data name="SectionNodeWithControllerNameNotFound" xml:space="preserve">
    <value>No Section Node with the controller name {0} exists.</value>
  </data>
  <data name="SectionTemplateControllerNameCannotBeNull" xml:space="preserve">
    <value>Section Template Controller Name cannot be null or empty.</value>
  </data>
  <data name="SectionTemplateControllerNameMustBeUnique" xml:space="preserve">
    <value>A Section Template with the Controller Name {0} already exists.</value>
  </data>
  <data name="SectionTemplateNotFound" xml:space="preserve">
    <value>No section template with the id {0} exists.</value>
  </data>
  <data name="UserNameNotFound" xml:space="preserve">
    <value>The username you entered does not exist.</value>
  </data>
  <data name="SectionNodeCannotBeNull" xml:space="preserve">
    <value>Section Node cannot be null.</value>
  </data>
  <data name="SectionTemplateCannotBeNull" xml:space="preserve">
    <value>Section Template cannot be null.</value>
  </data>
  <data name="EmailAlreadyExists" xml:space="preserve">
    <value>The email {0} is already in user by another user.</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>No User with the username {0} exists.</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required.</value>
  </data>
  <data name="ActionDoesNotHaveCmsPageTemplateAttribute" xml:space="preserve">
    <value>The action {0} does not have a CmsPageTemplate attribute.</value>
  </data>
  <data name="ActionNotFound" xml:space="preserve">
    <value>The action with the name {0} does not exist.</value>
  </data>
  <data name="ControllerDoesNotHaveCmsSectionTempalteAttribute" xml:space="preserve">
    <value>The controller {0} does not have a CmsSectionTemplate attribute.</value>
  </data>
  <data name="ControllerNotFound" xml:space="preserve">
    <value>The controller with the name {0} does not exist.</value>
  </data>
  <data name="SectionNodeInTrashAlready" xml:space="preserve">
    <value>Section Node with the id {0} is already in the trash.</value>
  </data>
  <data name="SectionNodeNotFoundForUrlName" xml:space="preserve">
    <value>Section Node with the url name {0} was not found.</value>
  </data>
  <data name="PropertiesCannotBeNull" xml:space="preserve">
    <value>Properties cannot be null.</value>
  </data>
  <data name="PropertiesMustHaveIds" xml:space="preserve">
    <value>All properties must have ids.</value>
  </data>
</root>